#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>


struct ListNode {
    int data;
    struct ListNode *next;
};


void insert(struct ListNode **head, int data) {
    struct ListNode *newNode = (struct ListNode *)malloc(sizeof(struct ListNode));
    newNode->data = data;
    newNode->next = NULL;

    if (*head == NULL) {
        *head = newNode;
    } else {
        struct ListNode *temp = *head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
}


struct ListNode* reverseList(struct ListNode* head) {
    struct ListNode* prev = NULL;
    struct ListNode* current = head;
    struct ListNode* next = NULL;

    while (current != NULL) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }

    return prev;
}


bool isPalindrome(struct ListNode* head) {
    if (head == NULL || head->next == NULL)
        return true;

    struct ListNode* slow = head;
    struct ListNode* fast = head;

    
    while (fast->next != NULL && fast->next->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }

    slow->next = reverseList(slow->next);

    struct ListNode* firstHalf = head;
    struct ListNode* secondHalf = slow->next;

    
    while (secondHalf != NULL) {
        if (firstHalf->data != secondHalf->data)
            return false;
        firstHalf = firstHalf->next;
        secondHalf = secondHalf->next;
    }

    return true;
}

int main() {
		printf("name : Yashwanth \nregno : 192210565");
    struct ListNode* list = NULL;
    insert(&list, 1);
    insert(&list, 2);
    insert(&list, 3);
    insert(&list, 2);
    insert(&list, 1);

    printf("\nLinked List: ");
    struct ListNode* current = list;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");

    if (isPalindrome(list)) {
        printf("\nThe linked list is a palindrome.\n");
    } else {
        printf("\nThe linked list is not a palindrome.\n");
    }

    return 0;
}
